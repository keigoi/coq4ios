- .vo のサイズが大き過ぎ  - 一部のtheoriesだけを入れるようにする? (theories-light: Init, Logic, Arith)
    実はArithを動かすために
    Numbers Program Classes Relations Setoids Structures PArith ZArith NArith List 
    が必要, これだけで約56M
  - iPad上でコンパイルする
    対象：各vo.itargetにあるファイル 
    依存解析 (coqdepに相当) する。 .d ファイルで得られた依存グラフをトポロジカルソートして順にコンパイル？
    コンパイルは Vernac.compile
  - 注意: -boot でないと <coqlib>/theories/ はコンパイルできない.
  - 全ファイルを Coqdep_lexer で lexingし依存関係を抽出: Coqdep_commonのソース参照
  - コンパイル：Vernac.compile (toplevel/vernac.ml. toplevel/coqtop.ml参照)

- parse: Pcoq.Gram, GramSigについてはcompat.ml4 と　Grammar.S については camlp5
  Vernacの構文木: Vernacexpr
  Loc.tの処理：PLoc
  初期化: Coqtop.init_toplevel (coqcもcoqtopを使っているので結局はこの関数が呼ばれる)
  例外の処理参考： Toplevel.print_toplevel_error
  その他eval,compile,loadなど： Vernac

- メモ： 環境依存の設定項目が config/coq_config.ml にあるので場合によってはまずいことになるかも
- Mac OS X x86_64(clang?) と iOS ARM で double の バイトオーダが異なるようだ…。 浮動小数リテラルが全て上下真逆になってしまう。
  参考：
  Symtable.transl_const 内,
  | Const_base(Const_float f) -> Obj.repr (float_of_string f)
  float型の値は、.cmoにはOCamlの値としてmarshalされているが、リンク時の定数の再配置(Symtable.patch_objects)によりマシン固有の値に化けてしまう。
  .cmoの動的ロードにも同様の問題がある (DynlinkがSymtableを使っている)
.PHONY: all install clean

# Coq top directory which contains .cmxa files build by OCamlXARM/OCamlXSIM
COQTOPDIR = ../coq-src

# Output file
COQLIB = libcoqios.a

# Our OCaml sources plus a part of coqdep we use
FILES[] = main # pathmap \
  # $(COQTOPDIR)/tools/coqdep_lexer $(COQTOPDIR)/tools/coqdep_common


################

# Required libraries
OCAMLINCLUDES += +camlp5 +coqlib
OCAML_OTHER_LIBS += str nums unix \
  gramlib \
  lib kernel library pretyping interp proofs parsing tactics toplevel highparsing hightactics

# statically linked Coq plugin cmxa
COQPLUGINLIBS = \
  cc_plugin  \
  decl_mode_plugin \
  extraction_plugin \
  quote_plugin \
  ring_plugin \
  field_plugin \
  ground_plugin \
  fourier_plugin \
  recdef_plugin \
  micromega_plugin \
  nsatz_plugin \
  omega_plugin \
  romega_plugin \
  rtauto_plugin \
  newring_plugin \
  subtac_plugin \
  ascii_syntax_plugin \
  nat_syntax_plugin \
  numbers_syntax_plugin \
  r_syntax_plugin \
  string_syntax_plugin \
  z_syntax_plugin \
  xml_plugin

# Custom build that (1) uses -output-obj and (2) links Coq plugin .cmxa after main.cmx
CMXFILES = $(addsuffix .cmx, $(FILES))
CMXA_OTHER_FILES = $(addsuffix .cmxa, $(OCAML_OTHER_LIBS))
COQ_CMXA_EXTRA_FILES = $(addsuffix .cmxa, $(COQPLUGINLIBS))

coqios.o: $(CMXFILES)
        $(OCAMLFIND) $(OCAMLOPTLINK) $(LAZY_OCAMLFINDFLAGS) $(PREFIXED_OCAMLPACKS) $(OCAMLFLAGS) $(OCAMLOPTFLAGS)\
                $(PREFIXED_OCAMLINCLUDES) $(OCAML_NATIVE_LINK_FLAGS)\
                coq_config.cmx \
                -output-obj \
                -o $@ $(CMXA_OTHER_FILES) $(OCamlLinkSort $(CMXFILES)) $(COQ_CMXA_EXTRA_FILES) $(OCAML_LINK_FLAGS)

$(COQLIB): coqios.o
	/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/ar rc $@ $^

.DEFAULT:

clean:
    rm -f $(COQLIB) *.cm[xti] *.cmti *.cmxa *.annot *.o

